{"version":3,"file":"component---src-pages-products-index-js-4b88b67fff7d8af0be1e.js","mappings":"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","sources":["webpack://avg/./src/components/product/ProductCard.jsx","webpack://avg/./src/components/product/ProductEmpty.jsx","webpack://avg/./src/components/product/ProductSlider.jsx","webpack://avg/./src/components/SideBar.jsx","webpack://avg/./src/pages/products/index.js","webpack://avg/./src/redux/actions/filter.js"],"sourcesContent":["import React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\n\nfunction ProductCard({ type, sub, title, size, price, image, slug }) {\n  const img = getImage(image)\n  return (\n    <div className=\"product\">\n      <div>\n        <GatsbyImage image={img} alt={title} className=\"product__image\" />\n        <h3 className=\"product__title\"> {title}</h3>\n        <h4 className=\"product__sub\">{sub.name}</h4>\n        <div className=\"product__info\">\n          <p className=\"product__info-size\">Размер: {size}</p>\n          <p className=\"product__info-price\">\n            {price.pref ? <span>{price.pref} </span> : \"\"}\n            {price.cost}\n            <span>{price.price_type}</span>\n          </p>\n        </div>\n        <Link className=\"product__link button-link\" to={`/${type}/${slug}`}>\n          Подробнее\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductCard\n","import React from \"react\"\n\nfunction ProductEmpty() {\n  return <div>Empty</div>\n}\n\nexport default ProductEmpty\n","/* eslint-disable */\nimport React, { useState, useRef } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { ProductCard } from \".\"\nimport Dimension from \"../Dimension\"\n\nfunction ProductSlider() {\n  const dimension = Dimension()\n  const products = useSelector(({ products }) => products.data.allMdx.nodes)\n  const [tick, setTick] = useState(0)\n  const [prodCardSize, setProdCardSize] = useState(310)\n  const [numberOfProdOnPage, setNumberOfProdOnPage] = useState(1)\n  const [current, setCurrent] = useState(null)\n  const ref = useRef()\n\n  React.useEffect(() => {\n    const sliderTransform = ref.current\n    setCurrent(sliderTransform)\n\n    setInterval(() => {\n      setTick(tick => tick + 1)\n    }, 15000)\n  }, [])\n\n  React.useMemo(() => {\n    if (dimension > 1240) {\n      setNumberOfProdOnPage(1240 / 310)\n    }\n    if (dimension < 1240) {\n      setNumberOfProdOnPage(dimension / prodCardSize)\n    }\n    if (numberOfProdOnPage - Math.round(numberOfProdOnPage) < 0) {\n      setProdCardSize(310)\n    }\n    if (numberOfProdOnPage - Math.round(numberOfProdOnPage) > 0) {\n      setProdCardSize(dimension / Math.round(numberOfProdOnPage))\n    }\n  }, [dimension, numberOfProdOnPage, prodCardSize])\n\n  React.useMemo(() => {\n    if (\n      current !== null &&\n      tick <= current.children.length / Math.round(numberOfProdOnPage)\n    ) {\n      current.style.transform = `translateX(-${\n        prodCardSize * tick * Math.round(numberOfProdOnPage)\n      }px)`\n    } else {\n      setTick(0)\n    }\n  }, [])\n\n  return (\n    <div className=\"products-slider\">\n      <div className=\"slider-box\" ref={ref}>\n        {products &&\n          products.map(product => {\n            return (\n              <ProductCard\n                key={product.id}\n                {...product.frontmatter}\n                slug={product.slug}\n              />\n            )\n          })}\n      </div>\n    </div>\n  )\n}\n\nexport default ProductSlider\n","import React from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { setCategory } from \"../redux/actions/filter\"\n\nimport \"../styles/menu.css\"\nimport Dimension from \"./Dimension\"\n\nconst sideBar = [\n  { category: \"Тротуарная плитка\", sub: [\"Вибропрессованная\", \"Вибролитая\"] },\n  { category: \"Водостоки\", sub: [] },\n  { category: \"Ступени для крыльца\", sub: [] },\n  { category: \"Фасадная плитка\", sub: [] },\n  { category: \"Бордюры\", sub: [\"Садовый бордюр\", \"Дорожные бордюры\"] },\n  {\n    category: \"Сыпучие материалы\",\n    sub: [\"Песок\", \"Щебень\", \"Цемент в мешках\", \"Сухие смеси\"],\n  },\n]\n\nfunction SideBar(props) {\n  const [actualTitle, setActualTitle] = React.useState(\"Все\")\n  const [toggle, setToggle] = React.useState(true)\n  const sidebarRef = React.useRef()\n  const dimension = Dimension()\n  const data = Object.values(props)\n  const dispatch = useDispatch()\n  const resetProducts = e =>\n    dispatch(setCategory(\"products\")) && onClickSidebarCategory(e)\n  const setProduction = e => {\n    const filtredProducts = data\n      .filter(\n        product =>\n          product.frontmatter.category.name === e.target.innerText ||\n          product.frontmatter.sub.name === e.target.innerText\n      )\n      .map(product => {\n        switch (e.target.innerText) {\n          case product.frontmatter.category.name:\n            return product.frontmatter.category.alt\n          case product.frontmatter.sub.name:\n            return product.frontmatter.sub.alt\n          default:\n            return product.frontmatter.type\n        }\n      })\n      .slice(-1)\n    dispatch(setCategory(filtredProducts[0]))\n    onClickSidebarCategory(e)\n  }\n\n  const onClickSidebarCategory = e => {\n    if (dimension < 920) {\n      setToggle(toggle => !toggle)\n      sidebarRef.current.style.display = toggle ? \"block\" : \"\"\n      setActualTitle(e.target.innerText)\n    }\n  }\n  return (\n    <div className=\"sidebar\">\n      {dimension < 920 && (\n        <div className=\"sidebar__title\">\n          <h5>\n            <button\n              className=\"sidebar__button\"\n              onClick={onClickSidebarCategory}\n            >\n              {actualTitle}\n            </button>\n          </h5>\n        </div>\n      )}\n      <ul className=\"sidebar__ul\" ref={sidebarRef}>\n        <li>\n          <h5>\n            <button className=\"sidebar__button\" onClick={resetProducts}>\n              Все\n            </button>\n          </h5>\n        </li>\n        {sideBar.map((item, index) => (\n          <li key={index}>\n            <h5>\n              <button className=\"sidebar__button\" onClick={setProduction}>\n                {item.category}\n              </button>\n            </h5>\n            {item.sub !== [] && (\n              <ul>\n                {item.sub.map((subcategory, i) => (\n                  <li key={i}>\n                    <h6>\n                      <button\n                        className=\"sidebar__button\"\n                        onClick={setProduction}\n                      >\n                        {subcategory}\n                      </button>\n                    </h6>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default SideBar\n","import * as React from \"react\"\nimport { useSelector } from \"react-redux\"\n\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\nimport SideBar from \"../../components/SideBar\"\nimport { ProductCard, ProductEmpty } from \"../../components/product\"\n\nimport \"../../styles/products.css\"\n\nconst ProductsPage = () => {\n  const products = useSelector(({ products }) => products.data.allMdx.nodes)\n  console.log(products)\n  const sort = useSelector(({ filter }) => filter.category)\n  const productsFilter = products.filter(\n    product =>\n      product.frontmatter.type === sort ||\n      product.frontmatter.category.alt === sort ||\n      product.frontmatter.sub.alt === sort\n  )\n  return (\n    <>\n      <Layout>\n        <Seo title=\"Продукция\" />\n        <div className=\"products-image\"></div>\n        <div className=\"container m-a\" style={{ marginTop: 60 }}>\n          <div className=\"products-box\">\n            <SideBar {...products} />\n            <div className=\"products\">\n              {sort ? (\n                productsFilter.map(product => {\n                  return (\n                    <ProductCard\n                      key={product.id}\n                      {...product.frontmatter}\n                      slug={product.slug}\n                    />\n                  )\n                })\n              ) : (\n                <ProductEmpty />\n              )}\n            </div>\n          </div>\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport default ProductsPage\n","export const setCategory = catCategory => ({\n  type: \"SET_CATEGORY\",\n  payload: catCategory,\n})\n"],"names":["type","sub","title","size","price","image","slug","img","getImage","className","G","alt","name","pref","cost","price_type","Link","to","dimension","Dimension","products","useSelector","data","allMdx","nodes","useState","tick","setTick","prodCardSize","setProdCardSize","numberOfProdOnPage","setNumberOfProdOnPage","current","setCurrent","ref","useRef","React","sliderTransform","setInterval","Math","round","children","length","style","transform","map","product","key","id","frontmatter","sideBar","category","props","actualTitle","setActualTitle","toggle","setToggle","sidebarRef","Object","values","dispatch","useDispatch","setProduction","e","filtredProducts","filter","target","innerText","slice","setCategory","onClickSidebarCategory","display","onClick","item","index","subcategory","i","console","log","sort","productsFilter","marginTop","catCategory","payload"],"sourceRoot":""}